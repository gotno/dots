# general
set-option -g history-limit 20000

set -g status-right '#(TZ=America/Los_Angeles date +"%%h %%d %%H:%%M")'

set -g pane-active-border-style fg=black,bg=colour31
set-window-option -g window-status-current-style bg=red

set -s set-clipboard on

# navigate text with vim keys
setw -g mode-keys vi

# set escape key delay to 1ms (default 500ms is way too slow for vim)
set -s escape-time 1

# use 256 colors
set -g default-terminal "tmux-256color"
set-option -sa terminal-overrides ",xterm*:Tc"

# statusline at top
set-option -g status-position top

# notification of activity in another window
setw -g monitor-activity on
set -g visual-activity off

# increase scrollback buffer size
set -g history-limit 50000

# tmux messages are displayed for 1.5 seconds
set -g display-time 1500

## keybinds

# switch tmux prefix to ctrl+a
set -g prefix C-a
unbind C-b

# don't name windows and panes based on what is in them
set-option -g automatic-rename off

# make copy-mode work a little more like vim
## escape out of "insert mode" with C-a Escape
## v to select
## y to copy
## i to return to "insert mode"
## where "insert mode" is regular tmux
bind Escape copy-mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi i send-keys -X cancel
bind-key -T copy-mode-vi Escape send-keys -X cancel

# if this is WSL, copy text from copy-mode to windows clipboard
# thanks https://mitchellt.com/2020/04/01/copying-from-tmux-wsl-windows-terminal.html
if-shell -b 'test -n "$WSLENV"' \
  'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel clip.exe'

# if this is macos, copy text from copy-mode to macos clipboard
# thanks https://www.grailbox.com/2020/08/use-system-clipboard-for-vi-copy-mode-in-tmux-in-macos-and-linux/
if-shell "uname | grep -q Darwin" \
  'bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel pbcopy'

# jump straight to search in copy-mode with prefix + /
bind-key / copy-mode \; send-key ?

# press C-a twice to send ctrl+a to a process inside tmux
bind C-a send-prefix

# clear buffer / clear history
bind s send-keys -R C-l
bind S {
  send-keys -R C-l
  clear-history
}

# prefix Tab to jump back to the last window
bind -r Tab last-window
# prefix opt/alt-Tab to swap this pane with index zero
# lol this doesn't work on windows of course
bind -r M-Tab swap-window -t 0

# reload .tmux.conf without quitting tmux
bind r source-file ~/.tmux.conf\; \
  display-message "tmux configuration reloaded"

# split keys
# i/o for split
# I/O for split but on the other side
# M-i/M-o for split outside current pane
bind o split-window -v -c "~/"
bind O split-window -vb -c "~/"
bind M-o split-window -vf -c "~/"
bind i split-window -h -c "~/"
# bind I split-window -hb -c "~/"
bind M-i split-window -hf -c "~/"

# resize pane, repeatable
bind -r h resize-pane -L 1
bind -r j resize-pane -D 1
bind -r k resize-pane -U 1
bind -r l resize-pane -R 1

# cycle layouts
bind -r Space next-layout

# cycle windows
bind -r n next-window
bind -r p previous-window

# fullscreen a pane
bind Enter resize-pane -Z

# kill pane/window/session
bind q confirm-before -p "kill-pane #P? (y/n)" killp
bind Q confirm-before -p "kill-window #W? (y/n)" killw
bind M-q confirm-before -p "kill-session #S? (y/n)" kill-session

# windows
bind t new-window -c "~/"
bind T command-prompt -I "#W" "rename-window '%%'"
bind C-t swap-window -t 0 # swap current window with index 0 window

bind c clock-mode
set-window-option -g clock-mode-style 24
set-window-option -g clock-mode-colour red

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
vim_pattern='(\S+/)?g?\.?(view|l?n?vim?x?|fzf)(diff)?(-wrapped)?'
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +${vim_pattern}$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'swap-pane -U'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'swap-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'swap-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'swap-pane -D'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'M-h' swap-pane -U
bind-key -T copy-mode-vi 'M-j' swap-pane -D
bind-key -T copy-mode-vi 'M-k' swap-pane -U
bind-key -T copy-mode-vi 'M-l' swap-pane -D

# # curl -o ~/.tmux.snazzy.theme https://raw.githubusercontent.com/ivnvxd/tmux-snazzy/main/.tmux.snazzy.theme
# source-file ~/.tmux.snazzy.theme
# set -g window-style 'fg=colour247,bg=colour236'
# set -g window-active-style 'fg=colour250,bg=black'

# TPM (git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm)
set -g @plugin 'rose-pine/tmux'
set -g @rose_pine_variant 'main'

set -g @plugin 'tmux-plugins/tpm'

# initialize tpm (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
